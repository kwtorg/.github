name: Reusable Self-Hosted CI/CD Workflow

on:
  workflow_call:
    # ✅ [유지] 지적해주신 대로, 기존의 secrets 처리 방식은 그대로 유지합니다.
    secrets:
      DOT_ENV_PROD:
        required: true

jobs:
  build-and-deploy:
    # --- 1. 수정: 'vars'를 사용한 복잡한 러너 선택 제거 ---
    runs-on: self-hosted
    env:
      REPO_NAME: ${{ github.event.repository.name }}
      # --- 2. 수정: 새로운 서버 구조에 맞게 배포 경로 변수 수정 ---
      APP_DIR: /home/username/docker/apps/${{ github.event.repository.name }}
      COMMIT_MSG: ${{ github.event.head_commit.message }}
      
    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Ensure target directory exists
        run: mkdir -p ${{ env.APP_DIR }}
        
      - name: Sync code into target app dir
        run: rsync -av --delete $GITHUB_WORKSPACE/ ${{ env.APP_DIR }}/
        
      - name: Create .env from Secrets
        # ✅ [유지] 기존의 .env 생성 로직은 그대로 유지합니다. 경로만 수정합니다.
        env:
          DOT_ENV_PROD: ${{ secrets.DOT_ENV_PROD }}
        run: |
          cat <<EOF > ${{ env.APP_DIR }}/.env
          $DOT_ENV_PROD
          EOF

      - name: Check for [deploy] keyword
        id: deploy_check
        run: |
          if [[ "${{ env.COMMIT_MSG }}" == *"[deploy]"* ]]; then
            echo "deploy=true" >> $GITHUB_OUTPUT
          else
            echo "deploy=false" >> $GITHUB_OUTPUT
          fi

      - name: Stop, Build, and Deploy
        if: steps.deploy_check.outputs.deploy == 'true'
        working-directory: ${{ env.APP_DIR }}
        run: docker compose -f docker-compose.yml --project-name $REPO_NAME up -d --build --remove-orphans

      - name: Cleanup old docker images
        if: steps.deploy_check.outputs.deploy == 'true'
        run: docker image prune -af --filter "until=72h"
